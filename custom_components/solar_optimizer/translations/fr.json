{
    "title": "Solar Optimizer configuration",
    "config": {
        "flow_title": "Solar Optimizer configuration",
        "step": {
            "user": {
                "title": "Type de configuration",
                "description": "Donnez le type de configuration",
                "data": {
                    "refresh_period_sec": "Refresh period",
                    "power_consumption_entity_id": "Net power consumption",
                    "power_production_entity_id": "Solar power production",
                    "sell_cost_entity_id": "Energy sell price",
                    "buy_cost_entity_id": "Energy buy price",
                    "sell_tax_percent_entity_id": "Sell taxe percent",
                    "smooth_production": "Smooth the solar production",
                    "battery_soc_entity_id": "Battery soc",
                    "raz_time": "Reset counter time"
                },
                "data_description": {
                    "refresh_period_sec": "Refresh period in seconds. Warning heavy calculs are done at each period. Don't refresh to often",
                    "power_consumption_entity_id": "the entity_id of the net power consumption sensor. Net power should be negative if power is exported to grid.",
                    "power_production_entity_id": "the entity_id of the solar power production sensor.",
                    "sell_cost_entity_id": "The entity_id which holds the current energy sell price.",
                    "buy_cost_entity_id": "The entity_id which holds the current energy buy price.",
                    "sell_tax_percent_entity_id": "The energy resell tax percent (0 to 100)",
                    "smooth_production": "If checked, the solar production will be smoothed to avoid hard variation",
                    "battery_soc_entity_id": "Battery state of charge in %. If you don't have battery, keep it empty",
                    "raz_time": "Time to reset active time counters. Should be before first exposure to sunlight but not too early to allow enough time for night activation"
                }
            }
        },
        "error": {
            "format_time_invalid": "Format of time should be HH:MM"
        }
    },
    "options": {
        "flow_title": "Solar Optimizer options configuration",
        "step": {
            "user": {
                "title": "Type de configuration",
                "description": "Donnez le type de configuration",
                "data": {
                    "refresh_period_sec": "Refresh period",
                    "power_consumption_entity_id": "Net power consumption",
                    "power_production_entity_id": "Solar power production",
                    "sell_cost_entity_id": "Energy sell price",
                    "buy_cost_entity_id": "Energy buy price",
                    "sell_tax_percent_entity_id": "Sell taxe percent",
                    "smooth_production": "Smooth the solar production",
                    "battery_soc_entity_id": "Battery soc",
                    "raz_time": "Heure de remise à zéro"
                },
                "data_description": {
                    "refresh_period_sec": "Refresh period in seconds. Warning heavy calculs are done at each period. Don't refresh to often",
                    "power_consumption_entity_id": "the entity_id of the net power consumption sensor. Net power should be negative if power is exported to grid.",
                    "power_production_entity_id": "the entity_id of the solar power production sensor.",
                    "sell_cost_entity_id": "The entity_id which holds the current energy sell price.",
                    "buy_cost_entity_id": "The entity_id which holds the current energy buy price.",
                    "sell_tax_percent_entity_id": "The energy resell tax percent (0 to 100)",
                    "smooth_production": "If checked, the solar production will be smoothed to avoid hard variation",
                    "battery_soc_entity_id": "Battery state of charge in %. If you don't have battery, keep it empty",
                    "raz_time": "Heure de remise à zéro des compteurs de temps passés actifs. Devrait être avant la première exposition au soleil mais pas trop tôt pour laisser du temps à l'activation de nuit"
                }
            },
            "device": {
                "title": "Paramètres de l'équipement",
                "description": "Donnez les paramètres de l'équipement",
                "data": {
                    "name": "Nom",
                    "entity_id": "Entity id",
                    "power_max": "Puissance maximale",
                    "check_usable_template": "Template d'utilisabilité",
                    "check_active_template": "Template d'activation",
                    "duration_min": "Durée mininale d'allumage",
                    "duration_stop_min": "Durée mininale d'extinction",
                    "action_mode": "Mode d'action",
                    "activation_service": "Service d'activation",
                    "deactivation_service": "Service d'extinction"
                },
                "data_description": {
                    "name": "Nom de l'équipement",
                    "entity_id": "Entity id de l'équipement",
                    "power_max": "La puissance maximale de l'équipement lorsqu'il est activé",
                    "check_usable_template": "Le template pour vérifier si l'équipement est utilisable. Exemple `True ` ou `states('sensor.my_sensor') | float > 10` (n'oubliez pas les doubles accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "La durée minimale de l'équipement lorsqu'il est allumé en minutes",
                    "duration_stop_min": "La durée minimale de l'équipement lorsqu'il est éteint en minutes",
                    "action_mode": "Le mode d'action. `service` pour appeler un service ou `event` pour envoyer un événement afin de l'allumer ou de l'éteindre",
                    "activation_service": "Le service pour allumer l'équipement. Exemple `switch/turn_on` ou `climate/set_hvac_mode:cool`",
                    "deactivation_service": "Le service pour éteindre l'équipement. Exemple `switch/turn_off` ou `climate/set_hvac_mode:off`"
                }
            }
        }
    },
    "selector": {
        "device_type": {
            "options": {
                "central_config": "Configuration commune",
                "device_type": "Equipement normal de type on/off",
                "powered_device_type": "Equipement avec puissance variable"
            }
        },
        "action_mode": {
            "options": {
                "service_call": "Appel d'action",
                "event": "Evènement"
            }
        },
        "error": {
            "format_time_invalid": "Format of time should be HH:MM"
        }
    }
}